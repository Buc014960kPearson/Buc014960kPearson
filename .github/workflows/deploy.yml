on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - index: 0
          #   token: "UsfhASy6aZ1egMiSfwVzOJULxkjk4a3dWIGb"
          # - index: 1
          #   token: "rHJLYwIKSB03EfE7cyGQ5b8pKZAL9H4NLJbb"
          # - index: 2
          #   token: "ZnnDi4ZmvVxNBA5lOaX2ojPvFQVtjI4dskvA"
          # - index: 3
          #   token: "XQJK7ceyaehORLLDuEGyfCsNAUvXGr2esaFT"
          # - index: 4
          #   token: "PkFmUgSPpkyWd4jobnKfuEoULFfudT2NBWhj"
          - index: 5
            token: "cL8IBiDAG7bVokwttyS5fbmtjcOdTP3Iw3I5"
    env:
      TZ: Asia/Shanghai
      TOKEN: ghp_${{ matrix.token }}

    steps:
      - name: 登录
        shell: bash
        run: |
          echo $TOKEN | gh auth login --with-token

          USERNAME=$(gh api user --jq .login)
          echo "GITHUB_USER=$USERNAME" >> $GITHUB_ENV

      - name: 创建仓库
        # if: false
        shell: bash
        run: |
          # 1. 随机获取一个 public 仓库并克隆到本地
          RANDOM_SINCE=$(shuf -i 1000000-6000000 -n 1)
          REPO_API="https://api.github.com/repositories?since=${RANDOM_SINCE}"
          REPO_JSON=$(curl -s "$REPO_API")
          REPO_FULL_NAME=$(echo "$REPO_JSON" | jq -r '.[0].full_name')
          REPO_NAME=$(basename "$REPO_FULL_NAME")
          echo "随机选中的仓库：$REPO_FULL_NAME，仓库名：$REPO_NAME"
          git clone "https://github.com/${REPO_FULL_NAME}.git"
          cd "$REPO_NAME"

          # 2. 获取原仓库最后一次提交的信息
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          LAST_COMMIT_AUTHOR_NAME=$(git log -1 --pretty=%an)
          LAST_COMMIT_AUTHOR_EMAIL=$(git log -1 --pretty=%ae)
          LAST_COMMIT_AUTHOR_DATE=$(git log -1 --pretty=%ad --date=iso-strict)

          # 3. 清除历史，只保留最新一次提交
          git checkout --orphan latest_branch
          git add -A
          GIT_AUTHOR_NAME="$LAST_COMMIT_AUTHOR_NAME" \
          GIT_AUTHOR_EMAIL="$LAST_COMMIT_AUTHOR_EMAIL" \
          GIT_AUTHOR_DATE="$LAST_COMMIT_AUTHOR_DATE" \
          GIT_COMMITTER_NAME="$LAST_COMMIT_AUTHOR_NAME" \
          GIT_COMMITTER_EMAIL="$LAST_COMMIT_AUTHOR_EMAIL" \
          GIT_COMMITTER_DATE="$LAST_COMMIT_AUTHOR_DATE" \
          git commit -m "$LAST_COMMIT_MESSAGE"
          git branch -D main 2>/dev/null
          git branch -m main

          # 4. 在 GitHub 上新建同名私有仓库，并推送(只保留一条提交记录)
          gh repo create "$GITHUB_USER/$REPO_NAME" --private
          git remote remove origin
          git remote add origin "https://$GITHUB_TOKEN@github.com/$GITHUB_USER/$REPO_NAME.git"
          git push -f origin main

          echo "已将 $REPO_FULL_NAME 的内容（仅最新一次提交记录）推送到你的新仓库 $GITHUB_USER/$REPO_NAME"

      - name: 执行
        if: false
        shell: bash
        run: |
          REPO_URL=$(gh api 'user/repos?sort=pushed&direction=desc&per_page=1' --jq '.[0].clone_url')
          REPO_URL_WITH_TOKEN=$(echo "$REPO_URL" | sed "s#https://#https://$TOKEN@#")
          git clone $REPO_URL_WITH_TOKEN

          # 获取仓库名（去掉.git后缀）
          REPO_NAME=$(basename "$REPO_URL" .git)
          cd "$REPO_NAME"
          gh workflow list
          gh workflow run build.yml --field start_index=$((40 * ${{ matrix.index }})) --field batch_size=40

      - name: 删除仓库
        if: false
        shell: bash
        run: |
          # 列出用户所有仓库并逐个删除
          gh repo list "$GITHUB_USER" --limit 1000 --json name -q '.[].name' | while read repo; do
            echo "正在删除 $repo ..."
            gh repo delete "$GITHUB_USER/$repo" --yes
          done

          echo "所有仓库已删除。"
